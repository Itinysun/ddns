<?php

namespace itinysun\ddns\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Str;
use itinysun\ddns\Services\DomainService;
use Slowlyo\OwlAdmin\Admin;
use Slowlyo\OwlAdmin\Controllers\AdminController;
use Slowlyo\OwlAdmin\Renderers\Form;
use Slowlyo\OwlAdmin\Renderers\Page;

/**
 * 域名列表
 *
 * @property DomainService $service
 */
class DomainController extends AdminController
{
    protected string $serviceName = DomainService::class;

    public function list(): Page
    {
        $cols = [
            amisMake()->TableColumn('id', 'ID')->sortable(),
            amisMake()->TableColumn('cloud', '云厂商'),
            amisMake()->TableColumn('domain_base', '根域名'),
            amisMake()->TableColumn('domain_host', '主机名'),
            amisMake()->TableColumn('created_at', __('admin.created_at'))->type('datetime')->sortable(true),
            amisMake()->TableColumn('updated_at', __('admin.updated_at'))->type('datetime')->sortable(true)
        ];
        if($this->user()->isAdministrator()){
            $cols[]=amisMake()->TableColumn('user_id', '用户');
        }
        $cols[]=$this->rowActions(true);
        $crud = $this->baseCRUD()
            ->filterTogglable(false)
			->headerToolbar([
				$this->createButton(true),
				...$this->baseHeaderToolBar()
			])
            ->columns($cols);

        return $this->baseList($crud);
    }

    public function form($isEdit = false): Form
    {
        return $this->baseForm()->body([
            amisMake()->SelectControl('cloud', '云厂商')->options(["qcloud"=>'腾讯云','ali'=>'阿里云']),
			amisMake()->TextControl('appid', 'Appid'),
			amisMake()->TextControl('secret', 'Secret'),
			amisMake()->TextControl('domain_base', '根域名'),
			amisMake()->TextControl('domain_host', '主机名'),
        ]);
    }

    public function detail(): Form
    {
        return $this->baseDetail()->body([
            amisMake()->TextControl('id', 'ID')->static(),
			amisMake()->SelectControl('cloud', '云厂商')->options(["qcloud"=>'腾讯云','ali'=>'阿里云'])->static(),
			amisMake()->TextControl('appid', 'Appid')->static(),
			amisMake()->TextControl('secret', 'Secret')->static(),
			amisMake()->TextControl('domain_base', '根域名')->static(),
			amisMake()->TextControl('domain_host', '主机名')->static(),
			amisMake()->TextControl('created_at', __('admin.created_at'))->static(),
			amisMake()->TextControl('updated_at', __('admin.updated_at'))->static(),
            amisMake()->TextControl('token', 'url')->static(),
        ]);
    }

    public function store(Request $request)
    {
        $request->merge(['user_id'=>Admin::user()->id,'token'=>Str::uuid()]);
        return parent::store($request); // TODO: Change the autogenerated stub
    }

    public function update(Request $request)
    {
        $filter = [];
        $appid = $request->post('appid');
        if($appid && Str::contains($appid,'*')){
            $filter[]='appid';
        }

        $secret = $request->post('secret');
        if($secret && Str::contains($secret,'*')){
            $filter[]='secret';
        }

        $result = $this->service->update($this->getPrimaryValue($request), $request->except($filter));

        return $this->autoResponse($result, __('admin.save'));
    }
}
